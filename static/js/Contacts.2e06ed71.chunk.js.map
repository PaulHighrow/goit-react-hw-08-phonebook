{"version":3,"file":"static/js/Contacts.2e06ed71.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/ContactEditForm/ContactEditForm.styled.js","components/ContactEditForm/ContactEditForm.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","pages/Register/Register.styled.js","utils/schemas.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  line-height: 1.4;\n\n  padding: 4px;\n  border: 1px solid #cccaca;\n  border-radius: 5px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: 11px;\n  font-weight: 400;\n\n  text-align: center;\n\n  color: #f28d7c;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  font-size: 16px;\n  border: 1px solid #b5b5b5;\n  border-radius: 5px;\n  background-color: #d5e3e1;\n  transition: var(--animation-global);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #f3f5ce;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(normalizedFilter)\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilterValue,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilterValue);\n\n  return {\n    contacts,\n    isLoading,\n    error,\n    filter,\n  };\n};\n","import { Formik } from 'formik';\nimport { useContacts } from 'hooks/useContacts';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { contactSchema } from 'utils/schemas';\nimport { Button, Error, Input, Label, StyledForm } from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.some(contact => contact.name === values.name)) {\n      toast.error(`Sorry, ${values.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n    toast.success('Contact successfully added!');\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={contactSchema}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <Error component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <Error component=\"div\" name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { AiTwotoneDelete, AiTwotoneEdit } from 'react-icons/ai';\nimport styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.2;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  justify-content: center;\n\n  border: none;\n  background-color: transparent;\n  color: #4682b4;\n  transition: var(--animation-global);\n\n  width: 24px;\n  padding: 2px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #000080;\n    filter: drop-shadow(var(--shadow-global));\n  }\n`;\n\nexport const EditIcon = styled(AiTwotoneEdit)`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const DeleteIcon = styled(AiTwotoneDelete)`\n  width: 24px;\n  height: 24px;\n`;\n","import { Field, Form } from 'formik';\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\nimport styled from 'styled-components';\n\nexport const CloseButton = styled.button`\n  display: flex;\n  justify-content: center;\n\n  border: none;\n  background-color: transparent;\n  color: #8b0000;\n  transition: var(--animation-global);\n\n  width: 24px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #ff2400;\n    filter: drop-shadow(var(--shadow-global));\n  }\n\n  position: absolute;\n  right: -6%;\n  top: -4%;\n`;\n\nexport const CloseIcon = styled(IoIosCloseCircleOutline)`\n  fill: currentColor;\n  width: 24px;\n  height: 24px;\n`;\n\nexport const ToastForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  gap: 8px;\n`;\n\nexport const ToastInput = styled(Field)`\n  font-size: 16px;\n  line-height: 1.4;\n\n  padding: 4px;\n  border: 1px solid #cccaca;\n  border-radius: 5px;\n`;\n","import { Text } from 'components/Contact/Contact.styled';\nimport { Button, Error } from 'components/ContactForm/ContactForm.styled';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { contactSchema } from 'utils/schemas';\nimport {\n  CloseButton,\n  CloseIcon,\n  ToastForm,\n  ToastInput,\n} from './ContactEditForm.styled';\n\nexport const ContactEditForm = ({ defaultValues, toastId, toggleDisabled }) => {\n  const dispatch = useDispatch();\n\n  const handleToastSubmit = values => {\n    if (\n      values.name === defaultValues.name &&\n      values.number === defaultValues.number\n    ) {\n      toast.dismiss(toastId);\n      toast('No changes were made', { icon: '🆗' });\n    } else {\n      const editedValues = {\n        id: defaultValues.id,\n        name: values.name,\n        number: values.number,\n      };\n\n      dispatch(editContact(editedValues));\n\n      toast.dismiss(toastId);\n      toast.success('Contact successfully edited!');\n    }\n    toggleDisabled(false);\n  };\n\n  const handleToastClose = () => {\n    toast.dismiss(toastId);\n    toggleDisabled(false);\n  };\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={handleToastSubmit}\n      validationSchema={contactSchema}\n    >\n      <ToastForm>\n        <Text>Edit Contact</Text>\n        <ToastInput type=\"text\" name=\"name\" />\n        <Error component=\"div\" name=\"name\" />\n        <ToastInput type=\"tel\" name=\"number\" />\n        <Error component=\"div\" name=\"number\" />\n        <Button type=\"submit\">Submit</Button>\n        <CloseButton type=\"button\" onClick={handleToastClose}>\n          <CloseIcon />\n        </CloseButton>\n      </ToastForm>\n    </Formik>\n  );\n};\n\nContactEditForm.propTypes = {\n  defaultValues: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  toastId: PropTypes.string.isRequired,\n  toggleDisabled: PropTypes.func.isRequired,\n};\n","import { ContactEditForm } from 'components/ContactEditForm/ContactEditForm';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ButtonBox,\n  DeleteIcon,\n  EditIcon,\n  IconButton,\n  Text,\n} from './Contact.styled';\n\nexport const Contact = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const toggleDisabled = value => {\n    setIsDisabled(value);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.success('Contact was deleted!');\n  };\n\n  const createToastForm = () => {\n    const defaultValues = { id, name, number };\n\n    toast(\n      t => {\n        return (\n          <ContactEditForm\n            defaultValues={defaultValues}\n            toastId={t.id}\n            toggleDisabled={toggleDisabled}\n          />\n        );\n      },\n      {\n        duration: Infinity,\n      }\n    );\n  };\n\n  const handleEdit = () => {\n    setIsDisabled(true);\n    createToastForm();\n  };\n\n  return (\n    <>\n      <Text>\n        {name}: {number}\n      </Text>\n      <ButtonBox>\n        <IconButton type=\"button\" onClick={handleEdit} disabled={isDisabled}>\n          <EditIcon />\n        </IconButton>\n        <IconButton type=\"button\" onClick={handleDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </ButtonBox>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListTitle = styled.h3`\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\n\nexport const List = styled.ul`\n  padding: 0 16px;\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border-bottom: 1px dashed #b5b5b5;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Text } from 'components/Contact/Contact.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport { Item, List, ListTitle } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      <ListTitle>Your Contacts</ListTitle>\n      {contacts.length ? (\n        filteredContacts.length ? (\n          <List>\n            {filteredContacts.map(contact => (\n              <Item key={contact.id}>\n                <Contact contact={contact} />\n              </Item>\n            ))}\n          </List>\n        ) : (\n          <Text>No matches found!</Text>\n        )\n      ) : (\n        <Text>No contacts yet, use a form above to add some!</Text>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  line-height: 1.4;\n\n  padding: 4px;\n  border: 1px solid #cccaca;\n  border-radius: 5px;\n`;","import { useContacts } from 'hooks/useContacts';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const { filter } = useContacts();\n  const dispatch = useDispatch();\n\n  const onFilterInput = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input type=\"text\" value={filter} onChange={onFilterInput} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Logo, Text } from 'pages/Register/Register.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { ROUTES } from 'utils/routes';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Text>\n        Manage your contacts in the\n        <Logo to={ROUTES.HOME}>Phonebook</Logo>\n      </Text>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {!isLoading && <ContactsList />}\n    </>\n  );\n};\n\nexport default Contacts;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n\n  padding: 30px;\n`;\n\nexport const Logo = styled(Link)`\n  display: block;\n\n  font-family: Genos;\n  font-size: 40px;\n  font-style: italic;\n\n  line-height: 1.6;\n\n  color: #4682b4;\n  transition: var(--animation-global);\n\n  &:hover,\n  &:focus {\n    color: #000080;\n    filter: drop-shadow(var(--shadow-global));\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 16px;\n  max-width: 205px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  text-align: left;\n  flex-direction: column;\n\n  gap: 4px;\n\n  font-size: 16px;\n  line-height: 1.2;\n`;\n","import * as yup from 'yup';\n\nexport let contactSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Name is too short!')\n    .matches(\n      /^[A-Za-zА-Яа-яёЁ]+(?:[-'\\s][A-Za-zА-Яа-яёЁ]+)*$/,\n      'Name must not contain digits'\n    )\n    .required('Name is required!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Please enter a valid number!'\n    )\n    .required('Number is required!'),\n});\n\nexport let loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters!')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/,\n      'Password must include at least one capital letter and one digit'\n    )\n    .required('Password is required!'),\n});\n\nexport let registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Name is too short!')\n    .matches(\n      /^[A-Za-zА-Яа-яёЁ]+(?:[-'\\s][A-Za-zА-Яа-яёЁ]+)*$/,\n      'Name must not contain digits'\n    )\n    .required('Name is required!'),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters!')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/,\n      'Password must include at least one capital letter and one digit'\n    )\n    .required('Password is required!'),\n});\n"],"names":["StyledForm","styled","Form","Label","Input","Field","Error","ErrorMessage","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","contact","name","includes","useContacts","useSelector","initialValues","number","ContactForm","dispatch","useDispatch","onSubmit","values","resetForm","some","toast","addContact","validationSchema","contactSchema","type","component","Text","ButtonBox","IconButton","EditIcon","AiTwotoneEdit","DeleteIcon","AiTwotoneDelete","CloseButton","CloseIcon","IoIosCloseCircleOutline","ToastForm","ToastInput","ContactEditForm","defaultValues","toastId","toggleDisabled","icon","editedValues","id","editContact","onClick","Contact","useState","isDisabled","setIsDisabled","value","t","duration","Infinity","createToastForm","disabled","deleteContact","ListTitle","List","Item","ContactsList","filteredContacts","length","map","Filter","onChange","evt","setFilter","target","useEffect","fetchContacts","to","ROUTES","Loader","Logo","Link","Wrapper","yup","shape","min","matches","required","loginSchema","email","password","registrationSchema"],"sourceRoot":""}