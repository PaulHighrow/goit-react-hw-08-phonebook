{"version":3,"file":"static/js/Login.e3e98c3f.chunk.js","mappings":"yTAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uHAQVE,EAAQF,EAAAA,GAAAA,MAAH,0KAWLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yIASLK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,+GASLO,EAASP,EAAAA,GAAAA,OAAH,oQ,iHC3BbQ,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA2CZ,UAxCc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,UAAC,KAAD,wCAC2B,SAAC,KAAD,CAAMC,GAAIC,EAAAA,EAAAA,SAAV,2BAE3B,SAAC,KAAD,CACEN,cAAeA,EACfO,SAZe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,GAASO,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAUKE,iBAAkBC,EAAAA,GAHpB,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,qCACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,WACzB,SAAC,KAAD,CAAOC,UAAU,MAAMD,KAAK,gBAGhC,SAAC,KAAD,WACE,UAAC,KAAD,YACE,wCACA,SAAC,KAAD,CAAOD,KAAK,WAAWC,KAAK,cAC5B,SAAC,KAAD,CAAOC,UAAU,MAAMD,KAAK,mBAGhC,SAAC,KAAD,CAAQD,KAAK,SAAb,4BAKT,C,yKCrDYG,EAAOxB,EAAAA,GAAAA,EAAH,0GAQJyB,GAAOzB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAH,wSAmBJ2B,EAAU3B,EAAAA,GAAAA,IAAH,4FAMPE,EAAQF,EAAAA,GAAAA,MAAH,mJ,sHClCP4B,EAAgBC,EAAAA,KAAaC,MAAM,CAC5CR,KAAMO,EAAAA,KAEHE,IAAI,EAAG,sBACPC,QACC,8GACA,gCAEDC,SAAS,qBACZC,OAAQL,EAAAA,KAELG,QACC,6EACA,gCAEDC,SAAS,yBAGHb,EAAcS,EAAAA,KAAaC,MAAM,CAC1CrB,MAAOoB,EAAAA,KAEJG,QAAQ,kCAAmC,8BAC3CC,SAAS,sBACZvB,SAAUmB,EAAAA,KAEPE,IAAI,EAAG,2CACPC,QACC,sDACA,mEAEDC,SAAS,2BAGHE,EAAqBN,EAAAA,KAAaC,MAAM,CACjDR,KAAMO,EAAAA,KAEHE,IAAI,EAAG,sBACPC,QACC,8GACA,gCAEDC,SAAS,qBACZxB,MAAOoB,EAAAA,KAEJG,QAAQ,kCAAmC,8BAC3CC,SAAS,sBACZvB,SAAUmB,EAAAA,KAEPE,IAAI,EAAG,2CACPC,QACC,sDACA,mEAEDC,SAAS,0B","sources":["components/ContactForm/ContactForm.styled.js","pages/Login/Login.jsx","pages/Register/Register.styled.js","utils/schemas.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  line-height: 1.4;\n\n  padding: 4px;\n  border: 1px solid #cccaca;\n  border-radius: 5px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: 11px;\n  font-weight: 400;\n\n  text-align: center;\n\n  color: #f28d7c;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  font-size: 16px;\n  border: 1px solid #b5b5b5;\n  border-radius: 5px;\n  background-color: #d5e3e1;\n  transition: var(--animation-global);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #f3f5ce;\n  }\n`;\n","import {\n  Button,\n  Error,\n  Input,\n  StyledForm,\n} from 'components/ContactForm/ContactForm.styled';\nimport { Formik } from 'formik';\nimport { Label, Logo, Text, Wrapper } from 'pages/Register/Register.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { ROUTES } from 'utils/routes';\nimport { loginSchema } from 'utils/schemas';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Text>\n        Login to your account on <Logo to={ROUTES.CONTACTS}>Phonebook</Logo>\n      </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={loginSchema}\n      >\n        <StyledForm>\n          <Wrapper>\n            <Label>\n              <span>EMail</span>\n              <Input type=\"email\" name=\"email\" />\n              <Error component=\"div\" name=\"email\" />\n            </Label>\n          </Wrapper>\n          <Wrapper>\n            <Label>\n              <span>Password</span>\n              <Input type=\"password\" name=\"password\" />\n              <Error component=\"div\" name=\"password\" />\n            </Label>\n          </Wrapper>\n          <Button type=\"submit\">Sign In</Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default Login;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n\n  padding: 30px;\n`;\n\nexport const Logo = styled(Link)`\n  display: block;\n\n  font-family: Genos;\n  font-size: 40px;\n  font-style: italic;\n\n  line-height: 1.6;\n\n  color: #4682b4;\n  transition: var(--animation-global);\n\n  &:hover,\n  &:focus {\n    color: #000080;\n    filter: drop-shadow(var(--shadow-global));\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 16px;\n  max-width: 205px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  text-align: left;\n  flex-direction: column;\n\n  gap: 4px;\n\n  font-size: 16px;\n  line-height: 1.2;\n`;\n","import * as yup from 'yup';\n\nexport let contactSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Name is too short!')\n    .matches(\n      /^[A-Za-zА-Яа-яёЁ]+(?:[-'\\s][A-Za-zА-Яа-яёЁ]+)*$/,\n      'Name must not contain digits'\n    )\n    .required('Name is required!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Please enter a valid number!'\n    )\n    .required('Number is required!'),\n});\n\nexport let loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters!')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/,\n      'Password must include at least one capital letter and one digit'\n    )\n    .required('Password is required!'),\n});\n\nexport let registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Name is too short!')\n    .matches(\n      /^[A-Za-zА-Яа-яёЁ]+(?:[-'\\s][A-Za-zА-Яа-яёЁ]+)*$/,\n      'Name must not contain digits'\n    )\n    .required('Name is required!'),\n  email: yup\n    .string()\n    .matches(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Please enter a valid email')\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters!')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/,\n      'Password must include at least one capital letter and one digit'\n    )\n    .required('Password is required!'),\n});\n"],"names":["StyledForm","styled","Form","Label","Input","Field","Error","ErrorMessage","Button","initialValues","email","password","dispatch","useDispatch","to","ROUTES","onSubmit","values","resetForm","logIn","validationSchema","loginSchema","type","name","component","Text","Logo","Link","Wrapper","contactSchema","yup","shape","min","matches","required","number","registrationSchema"],"sourceRoot":""}